version: '3.7'
services:

    redis:
        container_name: redis
        build: ./redis
        restart: always
        environment:
            # ${DB_PASSWORD} берем либо из окружения, либо из
            # .env-файла (создавать директории с docker-compose.yml)
            REDIS_ROOT_PASSWORD: ${DB_PASSWORD}
        ports:
            - "6379:6379" # дефолтные порты redis'а
        networks: 
            golovin:
                aliases: 
                    - redis_net

#    mongo:
#        container_name: mongo
#        build: ./mongo
#        restart: always
#        environment:
#            # ${DB_PASSWORD} берем либо из окружения, либо из
#            # .env-файла (создавать директории с docker-compose.yml)
#            MONGO_ROOT_PASSWORD: ${DB_PASSWORD}
#        ports:
#            - "27017:27017" # дефолтные порты mongo
#        networks:
#            golovin:
#                aliases:
#                    - mongo_net

#    neo4j:
#        container_name: neo4j
#        build: ./neo4j
#        restart: always
#        environment:
#            # ${DB_PASSWORD} берем либо из окружения, либо из
#            # .env-файла (создавать директории с docker-compose.yml)
#            NEO4J_ROOT_PASSWORD: ${DB_PASSWORD}
#        ports:
#            - "7474:7474" # дефолтные порты neo4j для HTTP
#            - "7473:7473" # дефолтные порты neo4j для HTTPS
#        networks:
#            golovin:
#                aliases:
#                    - neo4j_net
#
#    ms:
#        container_name: ms
#        build: ./ms
#        restart: always
#        environment:
#            # ${DB_PASSWORD} берем либо из окружения, либо из
#            # .env-файла (создавать директории с docker-compose.yml)
#            MS_ROOT_PASSWORD: ${DB_PASSWORD}
#        ports:
#            - "1433:1433" # дефолтные порты Microsoft SQL Server
#        networks:
#            golovin:
#                aliases:
#                    - ms_net

#    elastic:
#        container_name: elastic
#        build: ./elastic
#        restart: always
#        environment:
#            "discovery.type": "single-node"
#        ports:
#            - "9300:9300" # дефолтные порты ElasticSearch (для HTTPS)
#            - "9200:9200" # дефолтные порты ElasticSearch (для HTTP)
#        # зависимость от других сервисов
#        depends_on:
#          - redis
#          - mongo
#          - neo4j
#          - ms
#        links:
#          - redis
#          - mongo
#          - neo4j
#          - ms
#        networks:
#            golovin:
#                aliases:
#                    - elastic_net

    app:
        build: ./app
        container_name: app
        restart: always
        tty: true
        stdin_open: true
        volumes:
            - ${PWD}/app/repository:/var/www/app
            - ./app/conf.d:/etc/nginx/conf.d
            - type: bind
              source: ${PWD}/app/logs/access.log
              target: /var/log/nginx/access.log
            - type: bind
              source: ${PWD}/app/logs/error.log
              target: /var/log/nginx/error.log
            - ./app/html:/usr/share/nginx/html
            # '.htpasswd' создавать тут: https://www.htaccesstools.com/htpasswd-generator/
            # по умолчанию: root:secret
            - type: bind
              source: ${PWD}/app/.htpasswd
              target: /etc/nginx/.htpasswd
        ports:
          - "80:80"
          - "443:443"
        # зависимость от других сервисов
        depends_on:
            - redis
#            - mongo
#            - neo4j
#            - ms
#            - elastic
        links:
            - redis
#            - mongo
#            - neo4j
#            - ms
#            - elastic
        networks:
            golovin:
                aliases: 
                    - app_net

networks: 
    golovin: